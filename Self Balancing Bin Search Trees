In order for the search trees to be effective the MANTRA that everyone teaches is that:
"The height of the tree should be log(n) [to the base 2]"  -> Always remember this
If any tree satisfies this MANTRA then its an efficient Tree for searching operations.


Question -> What are some real-world applications of Red-Black trees today?
Answer: There are two popular Balanced Binary Search Tree: AVL Tree and Red-Black Tree.
Both offers O(lg n) search time. But the hidden constant behind Big O makes AVL Tree more 
suitable for search and Red-Black Tree for insertion-deletion. Insertion-deletion takes less 
time in Red-Black Tree than AVL Tree. That's Red-Black Tree are more popular than AVL Tree although
implementing Red-Black is very complicated task.


Video for understanding balancing in AVL Trees:
http://www.youtube.com/watch?v=ij1gSage9uA


IMP NOTE:
To understand RB Trees, you have to first understand 2-3-4 Trees (aka 2-4 Trees).
The following are the best videos for understanding 2-3-4 (or 2-4) Trees.
Basics of 2-3-4(aka 2-4) Trees -> http://www.youtube.com/watch?v=47u7RU0XNR0
Bottom Up and Top Down 2-3-4(aka 2-4) Trees -> http://www.youtube.com/watch?v=2679VQ26Fp4
Insertion in 2-3-4(aka 2-4) Trees -> http://www.youtube.com/watch?v=uIWLCfT9daI
Deletion in 2-3-4(aka 2-4) Trees -> http://www.youtube.com/watch?v=M_z-qYOY5JQ


Video for understanding Red Black Trees:
http://www.youtube.com/watch?v=JRsN4Oz36QU&list=PL104E2710A064F69E
http://www.youtube.com/watch?v=6QOKk_pcv3U&list=PL104E2710A064F69E



