 // NOTE 1: Arrays.sort, Collections.sort etc use quicksort which is inplace sorting algo. Hence these methods are void
 /*
  * Note 2: While iterating over Collection, if we are making modification to Collection
  * then we sould use Iterator for iterating
  * 
  * If we are not making any modification, then we can use get(int index) method
  * Example: List<Meeting> meetings = new ArrayList<Meeting>();
  * int count=0;
  * Meeting curr=null;
  * Meeting prev = meetings.get(0);
  * for(int i=1;i<meetings.size();i++){
  * 	curr=meetings.get(i);
  * 	if(curr.start < prev.end)
  * 		count++;
  * 	prev=curr;
  * }
  * 
  Sources: http://stackoverflow.com/questions/5504570/iterator-vs-for-loop-and-why-iterator-was-introduced-as-we-had-for-loop
  http://stackoverflow.com/questions/2113216/which-is-more-efficient-a-for-each-loop-or-an-iterator
  */
